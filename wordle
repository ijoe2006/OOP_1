import java.util.Random;
import java.util.Scanner;

public class Main {
    private static final boolean USE_COLOR = false; // set to true if ANSI colors work
    private static final int WORD_LENGTH = 5;
    private static final int MAX_TRIES = 6;

    private static final String[] WORDS = {
        "APPLE", "BRAVE", "CHIME", "DELTA", "EAGER",
        "FAITH", "GLORY", "HONEY", "ICING", "JOKER",
        "KNACK", "LEMUR", "MANGO", "NERVE", "OCEAN",
        "PIZZA", "QUILT", "RIVER", "SOLAR", "TANGO",
        "CHOSE", "CHAIN"
    };

    private static final String BG_GREEN = "\u001B[42m";
    private static final String BG_YELLOW = "\u001B[43m";
    private static final String BG_GRAY = "\u001B[100m";
    private static final String RESET = "\u001B[0m";

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        String secret = getRandomWord();

        System.out.println("Welcome to Console Wordle!");
        System.out.println("Guess the " + WORD_LENGTH + "-letter word in " + MAX_TRIES + " tries.");

        for (int attempt = 1; attempt <= MAX_TRIES; attempt++) {
            System.out.print("Attempt " + attempt + ": ");
            String guess = sc.nextLine().trim().toUpperCase();

            if (guess.length() != WORD_LENGTH) {
                System.out.println("Invalid guess! Must be " + WORD_LENGTH + " letters.");
                attempt--; 
                continue;
            }

            int[] score = scoreGuess(guess, secret);
            renderFeedback(guess, score);

            if (guess.equals(secret)) {
                System.out.println("You guessed the word in " + attempt + " tries!");
                sc.close();
                return;
            }
        }
        System.out.println("Out of tries! The secret word was: " + secret);
        sc.close();
    }

    private static String getRandomWord() {
        Random rand = new Random();
        return WORDS[rand.nextInt(WORDS.length)];
    }

    private static int[] scoreGuess(String guess, String secret) {
        int[] result = new int[WORD_LENGTH];
        int[] counts = new int[26];

        for (int i = 0; i < WORD_LENGTH; i++) {
            char g = guess.charAt(i);
            char s = secret.charAt(i);
            if (g == s) {
                result[i] = 2;
            } else {
                counts[s - 'A']++;
            }
        }

        for (int i = 0; i < WORD_LENGTH; i++) {
            if (result[i] == 2) continue;
            char g = guess.charAt(i);
            int idx = g - 'A';
            if (idx >= 0 && idx < 26 && counts[idx] > 0) {
                result[i] = 1;
                counts[idx]--;
            } else {
                result[i] = 0;
            }
        }
        return result;
    }

    private static void renderFeedback(String guess, int[] score) {
        for (int i = 0; i < WORD_LENGTH; i++) {
            String color;
            if (score[i] == 2) color = BG_GREEN;
            else if (score[i] == 1) color = BG_YELLOW;
            else color = BG_GRAY;

            if (USE_COLOR)
                System.out.print(color + guess.charAt(i) + RESET + " ");
            else
                System.out.print(guess.charAt(i) + " ");
        }
        System.out.println();
    }
}
